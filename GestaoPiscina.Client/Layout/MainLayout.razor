@inherits LayoutComponentBase
@using GestaoPiscina.Client.Shared
@using GestaoPiscina.Client.Services
@inject AuthService AuthService

<CascadingValue Value="this">
    <div class="bg-slate-900 text-slate-100 flex min-h-screen">
        <Sidebar />
        <main class="flex-1 flex flex-col w-full">
            <TopBar PageTitle="@CurrentPageTitle" />
            <div class="flex-1 overflow-auto">
                @Body
            </div>
        </main>
    </div>
</CascadingValue>

<div style="position: relative; z-index: 9999;">
    <Toast @bind-IsVisible="showToast" Title="@toastTitle" Message="@toastMessage" Type="@toastType" AutoHideDelay="4000" />
</div>

@code {
    [Inject] private NavigationManager NavigationManager { get; set; } = default!;
    
    private bool showToast = false;
    private string toastTitle = "";
    private string toastMessage = "";
    private string toastType = "info";

    protected override async Task OnInitializedAsync()
    {
        // Verificar autenticação
        var isAuthenticated = await AuthService.IsAuthenticatedAsync();
        if (!isAuthenticated)
        {
            NavigationManager.NavigateTo("/login");
        }
    }

    private string CurrentPageTitle
    {
        get
        {
            var uri = NavigationManager.Uri;
            return uri switch
            {
                var u when u.EndsWith("/") || u.EndsWith("/index") => "Painel de Manutenção",
                var u when u.Contains("/clientes") => "Gestão de Clientes",
                var u when u.Contains("/piscinas") => "Gestão de Piscinas",
                var u when u.Contains("/produtos") => "Gestão de Produtos",
                var u when u.Contains("/equipamentos") => "Gestão de Equipamentos",
                var u when u.Contains("/ordens-servico") => "Ordens de Serviço",
                var u when u.Contains("/rotas") => "Gestão de Rota",
                var u when u.Contains("/reagendamentos") => "Reagendamentos",
                var u when u.Contains("/relatorios") => "Relatórios",
                var u when u.Contains("/supervisao") => "Supervisão",
                var u when u.Contains("/estoque") => "Gestão de Estoque",
                var u when u.Contains("/configuracoes") => "Configurações",
                var u when u.Contains("/exemplo-abas") => "Exemplo com Abas",
                _ => "Painel de Manutenção"
            };
        }
    }

    public void ShowToast(string title, string message, string type = "info")
    {
        toastTitle = title;
        toastMessage = message;
        toastType = type;
        showToast = true;
        StateHasChanged();
    }
}
