// <auto-generated />
using System;
using GestaoPiscina.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestaoPiscina.Server.Migrations
{
    [DbContext(typeof(GestaoPiscinaContext))]
    [Migration("20250721213922_AddTelefoneEmailToCliente")]
    partial class AddTelefoneEmailToCliente
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("GestaoPiscina.Server.Models.Cliente", b =>
                {
                    b.Property<int>("IDCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DiasDeVisita")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<string>("Observacoes")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("IDCliente");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("GestaoPiscina.Server.Models.Equipamento", b =>
                {
                    b.Property<int>("IDEquipamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IDCliente")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NumeroSerie")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Observacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UltimaCalibragem")
                        .HasColumnType("TEXT");

                    b.HasKey("IDEquipamento");

                    b.HasIndex("IDCliente");

                    b.ToTable("Equipamentos");
                });

            modelBuilder.Entity("GestaoPiscina.Server.Models.EstoqueCliente", b =>
                {
                    b.Property<int>("IDEstoque")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IDCliente")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IDProduto")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("QuantidadeAtual")
                        .HasPrecision(10, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("QuantidadeMinima")
                        .HasPrecision(10, 2)
                        .HasColumnType("TEXT");

                    b.HasKey("IDEstoque");

                    b.HasIndex("IDCliente");

                    b.HasIndex("IDProduto");

                    b.ToTable("EstoquesCliente");
                });

            modelBuilder.Entity("GestaoPiscina.Server.Models.OrdemDeServico", b =>
                {
                    b.Property<int>("IDOS")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ChecklistConcluido")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataExecucao")
                        .HasColumnType("TEXT");

                    b.Property<string>("FotosAntesDepois")
                        .HasColumnType("TEXT");

                    b.Property<int>("IDPiscina")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Observacoes")
                        .HasColumnType("TEXT");

                    b.Property<bool>("RelatorioGerado")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("IDOS");

                    b.HasIndex("IDPiscina");

                    b.ToTable("OrdensDeServico");
                });

            modelBuilder.Entity("GestaoPiscina.Server.Models.Piscina", b =>
                {
                    b.Property<int>("IDPiscina")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IDCliente")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Localizacao")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("VolumeLitros")
                        .HasPrecision(10, 2)
                        .HasColumnType("TEXT");

                    b.HasKey("IDPiscina");

                    b.HasIndex("IDCliente");

                    b.ToTable("Piscinas");
                });

            modelBuilder.Entity("GestaoPiscina.Server.Models.Produto", b =>
                {
                    b.Property<int>("IDProduto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Concentracao")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Unidade")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.HasKey("IDProduto");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("GestaoPiscina.Server.Models.Usuario", b =>
                {
                    b.Property<int>("IDUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<string>("Perfil")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("IDUsuario");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("GestaoPiscina.Server.Models.Equipamento", b =>
                {
                    b.HasOne("GestaoPiscina.Server.Models.Cliente", "Cliente")
                        .WithMany("Equipamentos")
                        .HasForeignKey("IDCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("GestaoPiscina.Server.Models.EstoqueCliente", b =>
                {
                    b.HasOne("GestaoPiscina.Server.Models.Cliente", "Cliente")
                        .WithMany("Estoques")
                        .HasForeignKey("IDCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestaoPiscina.Server.Models.Produto", "Produto")
                        .WithMany("Estoques")
                        .HasForeignKey("IDProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("GestaoPiscina.Server.Models.OrdemDeServico", b =>
                {
                    b.HasOne("GestaoPiscina.Server.Models.Piscina", "Piscina")
                        .WithMany("OrdensDeServico")
                        .HasForeignKey("IDPiscina")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Piscina");
                });

            modelBuilder.Entity("GestaoPiscina.Server.Models.Piscina", b =>
                {
                    b.HasOne("GestaoPiscina.Server.Models.Cliente", "Cliente")
                        .WithMany("Piscinas")
                        .HasForeignKey("IDCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("GestaoPiscina.Server.Models.Cliente", b =>
                {
                    b.Navigation("Equipamentos");

                    b.Navigation("Estoques");

                    b.Navigation("Piscinas");
                });

            modelBuilder.Entity("GestaoPiscina.Server.Models.Piscina", b =>
                {
                    b.Navigation("OrdensDeServico");
                });

            modelBuilder.Entity("GestaoPiscina.Server.Models.Produto", b =>
                {
                    b.Navigation("Estoques");
                });
#pragma warning restore 612, 618
        }
    }
}
